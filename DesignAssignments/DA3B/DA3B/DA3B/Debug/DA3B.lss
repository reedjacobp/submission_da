
DA3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000061e  000006b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000061e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800102  00800102  000006b4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000724  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ab5  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c5  00000000  00000000  00001221  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003ab  00000000  00000000  00001be6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00001f94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b7  00000000  00000000  00002094  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000022d  00000000  00000000  0000254b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002778  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 a2 00 	jmp	0x144	; 0x144 <__vector_16>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee e1       	ldi	r30, 0x1E	; 30
  c8:	f6 e0       	ldi	r31, 0x06	; 6
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a2 30       	cpi	r26, 0x02	; 2
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a2 e0       	ldi	r26, 0x02	; 2
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a3 30       	cpi	r26, 0x03	; 3
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 85 00 	call	0x10a	; 0x10a <main>
  ea:	0c 94 0d 03 	jmp	0x61a	; 0x61a <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART_init>:
	while(*StringPtr != 0x00)
	{
		USART_send(*StringPtr);
		StringPtr++;
	}
}
  f2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  f6:	87 e6       	ldi	r24, 0x67	; 103
  f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  fc:	88 e1       	ldi	r24, 0x18	; 24
  fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 102:	86 e0       	ldi	r24, 0x06	; 6
 104:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 108:	08 95       	ret

0000010a <main>:
 10a:	0e 94 79 00 	call	0xf2	; 0xf2 <USART_init>
 10e:	84 e8       	ldi	r24, 0x84	; 132
 110:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 114:	84 e4       	ldi	r24, 0x44	; 68
 116:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 11a:	14 bc       	out	0x24, r1	; 36
 11c:	85 b5       	in	r24, 0x25	; 37
 11e:	84 60       	ori	r24, 0x04	; 4
 120:	85 bd       	out	0x25, r24	; 37
 122:	80 e1       	ldi	r24, 0x10	; 16
 124:	86 bd       	out	0x26, r24	; 38
 126:	ee e6       	ldi	r30, 0x6E	; 110
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	81 60       	ori	r24, 0x01	; 1
 12e:	80 83       	st	Z, r24
 130:	78 94       	sei
 132:	ff cf       	rjmp	.-2      	; 0x132 <main+0x28>

00000134 <USART_send>:
 134:	e0 ec       	ldi	r30, 0xC0	; 192
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	90 81       	ld	r25, Z
 13a:	95 ff       	sbrs	r25, 5
 13c:	fd cf       	rjmp	.-6      	; 0x138 <USART_send+0x4>
 13e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 142:	08 95       	ret

00000144 <__vector_16>:

ISR (TIMER0_OVF_vect)
{
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	8f 92       	push	r8
 150:	9f 92       	push	r9
 152:	af 92       	push	r10
 154:	bf 92       	push	r11
 156:	cf 92       	push	r12
 158:	df 92       	push	r13
 15a:	ef 92       	push	r14
 15c:	ff 92       	push	r15
 15e:	1f 93       	push	r17
 160:	2f 93       	push	r18
 162:	3f 93       	push	r19
 164:	4f 93       	push	r20
 166:	5f 93       	push	r21
 168:	6f 93       	push	r22
 16a:	7f 93       	push	r23
 16c:	8f 93       	push	r24
 16e:	9f 93       	push	r25
 170:	af 93       	push	r26
 172:	bf 93       	push	r27
 174:	cf 93       	push	r28
 176:	df 93       	push	r29
 178:	ef 93       	push	r30
 17a:	ff 93       	push	r31
	OVF_COUNT++; //increment the overflow counter
 17c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 180:	8f 5f       	subi	r24, 0xFF	; 255
 182:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
	if (OVF_COUNT == OVF_LIMIT) //check to see if the limit was reached
 186:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <OVF_LIMIT>
 18a:	89 13       	cpse	r24, r25
 18c:	5d c0       	rjmp	.+186    	; 0x248 <__vector_16+0x104>
	{
		ADCSRA |= (1 << ADSC);
 18e:	ea e7       	ldi	r30, 0x7A	; 122
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	80 81       	ld	r24, Z
 194:	80 64       	ori	r24, 0x40	; 64
 196:	80 83       	st	Z, r24
		while((ADCSRA & (1 << ADIF)) == 0)
 198:	80 81       	ld	r24, Z
 19a:	84 fd       	sbrc	r24, 4
 19c:	53 c0       	rjmp	.+166    	; 0x244 <__vector_16+0x100>
		{
			ADCSRA |= (1 << ADIF);
 19e:	ca e7       	ldi	r28, 0x7A	; 122
 1a0:	d0 e0       	ldi	r29, 0x00	; 0
			int temp = ADCL;
 1a2:	0f 2e       	mov	r0, r31
 1a4:	f8 e7       	ldi	r31, 0x78	; 120
 1a6:	af 2e       	mov	r10, r31
 1a8:	b1 2c       	mov	r11, r1
 1aa:	f0 2d       	mov	r31, r0
			temp = temp | (ADCH<<8);
 1ac:	0f 2e       	mov	r0, r31
 1ae:	f9 e7       	ldi	r31, 0x79	; 121
 1b0:	cf 2e       	mov	r12, r31
 1b2:	d1 2c       	mov	r13, r1
 1b4:	f0 2d       	mov	r31, r0
			temp = (temp/1024.0) * 5000/10;
			temp = (temp*2)+32; //equation to convert celsius to farenheit. can't use used 2 instead of 9/5
			//USART_send((a/100)+'0');
			temp = temp % 100;
 1b6:	0f 2e       	mov	r0, r31
 1b8:	f4 e6       	ldi	r31, 0x64	; 100
 1ba:	ef 2e       	mov	r14, r31
 1bc:	f1 2c       	mov	r15, r1
 1be:	f0 2d       	mov	r31, r0
			USART_send((temp/10)+'0');
 1c0:	0f 2e       	mov	r0, r31
 1c2:	fa e0       	ldi	r31, 0x0A	; 10
 1c4:	8f 2e       	mov	r8, r31
 1c6:	91 2c       	mov	r9, r1
 1c8:	f0 2d       	mov	r31, r0
	if (OVF_COUNT == OVF_LIMIT) //check to see if the limit was reached
	{
		ADCSRA |= (1 << ADSC);
		while((ADCSRA & (1 << ADIF)) == 0)
		{
			ADCSRA |= (1 << ADIF);
 1ca:	88 81       	ld	r24, Y
 1cc:	80 61       	ori	r24, 0x10	; 16
 1ce:	88 83       	st	Y, r24
			int temp = ADCL;
 1d0:	f5 01       	movw	r30, r10
 1d2:	60 81       	ld	r22, Z
			temp = temp | (ADCH<<8);
 1d4:	f6 01       	movw	r30, r12
 1d6:	80 81       	ld	r24, Z
			temp = (temp/1024.0) * 5000/10;
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	78 2b       	or	r23, r24
 1dc:	07 2e       	mov	r0, r23
 1de:	00 0c       	add	r0, r0
 1e0:	88 0b       	sbc	r24, r24
 1e2:	99 0b       	sbc	r25, r25
 1e4:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <__floatsisf>
 1e8:	20 e0       	ldi	r18, 0x00	; 0
 1ea:	30 e0       	ldi	r19, 0x00	; 0
 1ec:	40 e8       	ldi	r20, 0x80	; 128
 1ee:	5a e3       	ldi	r21, 0x3A	; 58
 1f0:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__mulsf3>
 1f4:	20 e0       	ldi	r18, 0x00	; 0
 1f6:	30 e4       	ldi	r19, 0x40	; 64
 1f8:	4c e9       	ldi	r20, 0x9C	; 156
 1fa:	55 e4       	ldi	r21, 0x45	; 69
 1fc:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__mulsf3>
 200:	20 e0       	ldi	r18, 0x00	; 0
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	40 e2       	ldi	r20, 0x20	; 32
 206:	51 e4       	ldi	r21, 0x41	; 65
 208:	0e 94 42 01 	call	0x284	; 0x284 <__divsf3>
			temp = (temp*2)+32; //equation to convert celsius to farenheit. can't use used 2 instead of 9/5
 20c:	0e 94 b4 01 	call	0x368	; 0x368 <__fixsfsi>
 210:	60 5f       	subi	r22, 0xF0	; 240
 212:	7f 4f       	sbci	r23, 0xFF	; 255
 214:	cb 01       	movw	r24, r22
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
			//USART_send((a/100)+'0');
			temp = temp % 100;
 21a:	b7 01       	movw	r22, r14
 21c:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__divmodhi4>
			USART_send((temp/10)+'0');
 220:	b4 01       	movw	r22, r8
 222:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__divmodhi4>
 226:	18 2f       	mov	r17, r24
 228:	80 e3       	ldi	r24, 0x30	; 48
 22a:	86 0f       	add	r24, r22
 22c:	0e 94 9a 00 	call	0x134	; 0x134 <USART_send>
			temp = temp % 10;
			USART_send((temp)+'0');
 230:	80 e3       	ldi	r24, 0x30	; 48
 232:	81 0f       	add	r24, r17
 234:	0e 94 9a 00 	call	0x134	; 0x134 <USART_send>
			//USART_send('\r');
			USART_send('\n');
 238:	8a e0       	ldi	r24, 0x0A	; 10
 23a:	0e 94 9a 00 	call	0x134	; 0x134 <USART_send>
{
	OVF_COUNT++; //increment the overflow counter
	if (OVF_COUNT == OVF_LIMIT) //check to see if the limit was reached
	{
		ADCSRA |= (1 << ADSC);
		while((ADCSRA & (1 << ADIF)) == 0)
 23e:	88 81       	ld	r24, Y
 240:	84 ff       	sbrs	r24, 4
 242:	c3 cf       	rjmp	.-122    	; 0x1ca <__vector_16+0x86>
			temp = temp % 10;
			USART_send((temp)+'0');
			//USART_send('\r');
			USART_send('\n');
		}
		OVF_COUNT = 0; //reset overflow counter
 244:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
	}
	TCNT0 = 16; //reset TOP
 248:	80 e1       	ldi	r24, 0x10	; 16
 24a:	86 bd       	out	0x26, r24	; 38
 24c:	ff 91       	pop	r31
 24e:	ef 91       	pop	r30
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	bf 91       	pop	r27
 256:	af 91       	pop	r26
 258:	9f 91       	pop	r25
 25a:	8f 91       	pop	r24
 25c:	7f 91       	pop	r23
 25e:	6f 91       	pop	r22
 260:	5f 91       	pop	r21
 262:	4f 91       	pop	r20
 264:	3f 91       	pop	r19
 266:	2f 91       	pop	r18
 268:	1f 91       	pop	r17
 26a:	ff 90       	pop	r15
 26c:	ef 90       	pop	r14
 26e:	df 90       	pop	r13
 270:	cf 90       	pop	r12
 272:	bf 90       	pop	r11
 274:	af 90       	pop	r10
 276:	9f 90       	pop	r9
 278:	8f 90       	pop	r8
 27a:	0f 90       	pop	r0
 27c:	0f be       	out	0x3f, r0	; 63
 27e:	0f 90       	pop	r0
 280:	1f 90       	pop	r1
 282:	18 95       	reti

00000284 <__divsf3>:
 284:	0e 94 56 01 	call	0x2ac	; 0x2ac <__divsf3x>
 288:	0c 94 3e 02 	jmp	0x47c	; 0x47c <__fp_round>
 28c:	0e 94 37 02 	call	0x46e	; 0x46e <__fp_pscB>
 290:	58 f0       	brcs	.+22     	; 0x2a8 <__divsf3+0x24>
 292:	0e 94 30 02 	call	0x460	; 0x460 <__fp_pscA>
 296:	40 f0       	brcs	.+16     	; 0x2a8 <__divsf3+0x24>
 298:	29 f4       	brne	.+10     	; 0x2a4 <__divsf3+0x20>
 29a:	5f 3f       	cpi	r21, 0xFF	; 255
 29c:	29 f0       	breq	.+10     	; 0x2a8 <__divsf3+0x24>
 29e:	0c 94 27 02 	jmp	0x44e	; 0x44e <__fp_inf>
 2a2:	51 11       	cpse	r21, r1
 2a4:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_szero>
 2a8:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__fp_nan>

000002ac <__divsf3x>:
 2ac:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_split3>
 2b0:	68 f3       	brcs	.-38     	; 0x28c <__divsf3+0x8>

000002b2 <__divsf3_pse>:
 2b2:	99 23       	and	r25, r25
 2b4:	b1 f3       	breq	.-20     	; 0x2a2 <__divsf3+0x1e>
 2b6:	55 23       	and	r21, r21
 2b8:	91 f3       	breq	.-28     	; 0x29e <__divsf3+0x1a>
 2ba:	95 1b       	sub	r25, r21
 2bc:	55 0b       	sbc	r21, r21
 2be:	bb 27       	eor	r27, r27
 2c0:	aa 27       	eor	r26, r26
 2c2:	62 17       	cp	r22, r18
 2c4:	73 07       	cpc	r23, r19
 2c6:	84 07       	cpc	r24, r20
 2c8:	38 f0       	brcs	.+14     	; 0x2d8 <__divsf3_pse+0x26>
 2ca:	9f 5f       	subi	r25, 0xFF	; 255
 2cc:	5f 4f       	sbci	r21, 0xFF	; 255
 2ce:	22 0f       	add	r18, r18
 2d0:	33 1f       	adc	r19, r19
 2d2:	44 1f       	adc	r20, r20
 2d4:	aa 1f       	adc	r26, r26
 2d6:	a9 f3       	breq	.-22     	; 0x2c2 <__divsf3_pse+0x10>
 2d8:	35 d0       	rcall	.+106    	; 0x344 <__divsf3_pse+0x92>
 2da:	0e 2e       	mov	r0, r30
 2dc:	3a f0       	brmi	.+14     	; 0x2ec <__divsf3_pse+0x3a>
 2de:	e0 e8       	ldi	r30, 0x80	; 128
 2e0:	32 d0       	rcall	.+100    	; 0x346 <__divsf3_pse+0x94>
 2e2:	91 50       	subi	r25, 0x01	; 1
 2e4:	50 40       	sbci	r21, 0x00	; 0
 2e6:	e6 95       	lsr	r30
 2e8:	00 1c       	adc	r0, r0
 2ea:	ca f7       	brpl	.-14     	; 0x2de <__divsf3_pse+0x2c>
 2ec:	2b d0       	rcall	.+86     	; 0x344 <__divsf3_pse+0x92>
 2ee:	fe 2f       	mov	r31, r30
 2f0:	29 d0       	rcall	.+82     	; 0x344 <__divsf3_pse+0x92>
 2f2:	66 0f       	add	r22, r22
 2f4:	77 1f       	adc	r23, r23
 2f6:	88 1f       	adc	r24, r24
 2f8:	bb 1f       	adc	r27, r27
 2fa:	26 17       	cp	r18, r22
 2fc:	37 07       	cpc	r19, r23
 2fe:	48 07       	cpc	r20, r24
 300:	ab 07       	cpc	r26, r27
 302:	b0 e8       	ldi	r27, 0x80	; 128
 304:	09 f0       	breq	.+2      	; 0x308 <__divsf3_pse+0x56>
 306:	bb 0b       	sbc	r27, r27
 308:	80 2d       	mov	r24, r0
 30a:	bf 01       	movw	r22, r30
 30c:	ff 27       	eor	r31, r31
 30e:	93 58       	subi	r25, 0x83	; 131
 310:	5f 4f       	sbci	r21, 0xFF	; 255
 312:	3a f0       	brmi	.+14     	; 0x322 <__divsf3_pse+0x70>
 314:	9e 3f       	cpi	r25, 0xFE	; 254
 316:	51 05       	cpc	r21, r1
 318:	78 f0       	brcs	.+30     	; 0x338 <__divsf3_pse+0x86>
 31a:	0c 94 27 02 	jmp	0x44e	; 0x44e <__fp_inf>
 31e:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_szero>
 322:	5f 3f       	cpi	r21, 0xFF	; 255
 324:	e4 f3       	brlt	.-8      	; 0x31e <__divsf3_pse+0x6c>
 326:	98 3e       	cpi	r25, 0xE8	; 232
 328:	d4 f3       	brlt	.-12     	; 0x31e <__divsf3_pse+0x6c>
 32a:	86 95       	lsr	r24
 32c:	77 95       	ror	r23
 32e:	67 95       	ror	r22
 330:	b7 95       	ror	r27
 332:	f7 95       	ror	r31
 334:	9f 5f       	subi	r25, 0xFF	; 255
 336:	c9 f7       	brne	.-14     	; 0x32a <__divsf3_pse+0x78>
 338:	88 0f       	add	r24, r24
 33a:	91 1d       	adc	r25, r1
 33c:	96 95       	lsr	r25
 33e:	87 95       	ror	r24
 340:	97 f9       	bld	r25, 7
 342:	08 95       	ret
 344:	e1 e0       	ldi	r30, 0x01	; 1
 346:	66 0f       	add	r22, r22
 348:	77 1f       	adc	r23, r23
 34a:	88 1f       	adc	r24, r24
 34c:	bb 1f       	adc	r27, r27
 34e:	62 17       	cp	r22, r18
 350:	73 07       	cpc	r23, r19
 352:	84 07       	cpc	r24, r20
 354:	ba 07       	cpc	r27, r26
 356:	20 f0       	brcs	.+8      	; 0x360 <__divsf3_pse+0xae>
 358:	62 1b       	sub	r22, r18
 35a:	73 0b       	sbc	r23, r19
 35c:	84 0b       	sbc	r24, r20
 35e:	ba 0b       	sbc	r27, r26
 360:	ee 1f       	adc	r30, r30
 362:	88 f7       	brcc	.-30     	; 0x346 <__divsf3_pse+0x94>
 364:	e0 95       	com	r30
 366:	08 95       	ret

00000368 <__fixsfsi>:
 368:	0e 94 bb 01 	call	0x376	; 0x376 <__fixunssfsi>
 36c:	68 94       	set
 36e:	b1 11       	cpse	r27, r1
 370:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_szero>
 374:	08 95       	ret

00000376 <__fixunssfsi>:
 376:	0e 94 57 02 	call	0x4ae	; 0x4ae <__fp_splitA>
 37a:	88 f0       	brcs	.+34     	; 0x39e <__fixunssfsi+0x28>
 37c:	9f 57       	subi	r25, 0x7F	; 127
 37e:	98 f0       	brcs	.+38     	; 0x3a6 <__fixunssfsi+0x30>
 380:	b9 2f       	mov	r27, r25
 382:	99 27       	eor	r25, r25
 384:	b7 51       	subi	r27, 0x17	; 23
 386:	b0 f0       	brcs	.+44     	; 0x3b4 <__fixunssfsi+0x3e>
 388:	e1 f0       	breq	.+56     	; 0x3c2 <__fixunssfsi+0x4c>
 38a:	66 0f       	add	r22, r22
 38c:	77 1f       	adc	r23, r23
 38e:	88 1f       	adc	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	1a f0       	brmi	.+6      	; 0x39a <__fixunssfsi+0x24>
 394:	ba 95       	dec	r27
 396:	c9 f7       	brne	.-14     	; 0x38a <__fixunssfsi+0x14>
 398:	14 c0       	rjmp	.+40     	; 0x3c2 <__fixunssfsi+0x4c>
 39a:	b1 30       	cpi	r27, 0x01	; 1
 39c:	91 f0       	breq	.+36     	; 0x3c2 <__fixunssfsi+0x4c>
 39e:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fp_zero>
 3a2:	b1 e0       	ldi	r27, 0x01	; 1
 3a4:	08 95       	ret
 3a6:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_zero>
 3aa:	67 2f       	mov	r22, r23
 3ac:	78 2f       	mov	r23, r24
 3ae:	88 27       	eor	r24, r24
 3b0:	b8 5f       	subi	r27, 0xF8	; 248
 3b2:	39 f0       	breq	.+14     	; 0x3c2 <__fixunssfsi+0x4c>
 3b4:	b9 3f       	cpi	r27, 0xF9	; 249
 3b6:	cc f3       	brlt	.-14     	; 0x3aa <__fixunssfsi+0x34>
 3b8:	86 95       	lsr	r24
 3ba:	77 95       	ror	r23
 3bc:	67 95       	ror	r22
 3be:	b3 95       	inc	r27
 3c0:	d9 f7       	brne	.-10     	; 0x3b8 <__fixunssfsi+0x42>
 3c2:	3e f4       	brtc	.+14     	; 0x3d2 <__fixunssfsi+0x5c>
 3c4:	90 95       	com	r25
 3c6:	80 95       	com	r24
 3c8:	70 95       	com	r23
 3ca:	61 95       	neg	r22
 3cc:	7f 4f       	sbci	r23, 0xFF	; 255
 3ce:	8f 4f       	sbci	r24, 0xFF	; 255
 3d0:	9f 4f       	sbci	r25, 0xFF	; 255
 3d2:	08 95       	ret

000003d4 <__floatunsisf>:
 3d4:	e8 94       	clt
 3d6:	09 c0       	rjmp	.+18     	; 0x3ea <__floatsisf+0x12>

000003d8 <__floatsisf>:
 3d8:	97 fb       	bst	r25, 7
 3da:	3e f4       	brtc	.+14     	; 0x3ea <__floatsisf+0x12>
 3dc:	90 95       	com	r25
 3de:	80 95       	com	r24
 3e0:	70 95       	com	r23
 3e2:	61 95       	neg	r22
 3e4:	7f 4f       	sbci	r23, 0xFF	; 255
 3e6:	8f 4f       	sbci	r24, 0xFF	; 255
 3e8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ea:	99 23       	and	r25, r25
 3ec:	a9 f0       	breq	.+42     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3ee:	f9 2f       	mov	r31, r25
 3f0:	96 e9       	ldi	r25, 0x96	; 150
 3f2:	bb 27       	eor	r27, r27
 3f4:	93 95       	inc	r25
 3f6:	f6 95       	lsr	r31
 3f8:	87 95       	ror	r24
 3fa:	77 95       	ror	r23
 3fc:	67 95       	ror	r22
 3fe:	b7 95       	ror	r27
 400:	f1 11       	cpse	r31, r1
 402:	f8 cf       	rjmp	.-16     	; 0x3f4 <__floatsisf+0x1c>
 404:	fa f4       	brpl	.+62     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 406:	bb 0f       	add	r27, r27
 408:	11 f4       	brne	.+4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40a:	60 ff       	sbrs	r22, 0
 40c:	1b c0       	rjmp	.+54     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 40e:	6f 5f       	subi	r22, 0xFF	; 255
 410:	7f 4f       	sbci	r23, 0xFF	; 255
 412:	8f 4f       	sbci	r24, 0xFF	; 255
 414:	9f 4f       	sbci	r25, 0xFF	; 255
 416:	16 c0       	rjmp	.+44     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 418:	88 23       	and	r24, r24
 41a:	11 f0       	breq	.+4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 41c:	96 e9       	ldi	r25, 0x96	; 150
 41e:	11 c0       	rjmp	.+34     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 420:	77 23       	and	r23, r23
 422:	21 f0       	breq	.+8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 424:	9e e8       	ldi	r25, 0x8E	; 142
 426:	87 2f       	mov	r24, r23
 428:	76 2f       	mov	r23, r22
 42a:	05 c0       	rjmp	.+10     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42c:	66 23       	and	r22, r22
 42e:	71 f0       	breq	.+28     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 430:	96 e8       	ldi	r25, 0x86	; 134
 432:	86 2f       	mov	r24, r22
 434:	70 e0       	ldi	r23, 0x00	; 0
 436:	60 e0       	ldi	r22, 0x00	; 0
 438:	2a f0       	brmi	.+10     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43a:	9a 95       	dec	r25
 43c:	66 0f       	add	r22, r22
 43e:	77 1f       	adc	r23, r23
 440:	88 1f       	adc	r24, r24
 442:	da f7       	brpl	.-10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 444:	88 0f       	add	r24, r24
 446:	96 95       	lsr	r25
 448:	87 95       	ror	r24
 44a:	97 f9       	bld	r25, 7
 44c:	08 95       	ret

0000044e <__fp_inf>:
 44e:	97 f9       	bld	r25, 7
 450:	9f 67       	ori	r25, 0x7F	; 127
 452:	80 e8       	ldi	r24, 0x80	; 128
 454:	70 e0       	ldi	r23, 0x00	; 0
 456:	60 e0       	ldi	r22, 0x00	; 0
 458:	08 95       	ret

0000045a <__fp_nan>:
 45a:	9f ef       	ldi	r25, 0xFF	; 255
 45c:	80 ec       	ldi	r24, 0xC0	; 192
 45e:	08 95       	ret

00000460 <__fp_pscA>:
 460:	00 24       	eor	r0, r0
 462:	0a 94       	dec	r0
 464:	16 16       	cp	r1, r22
 466:	17 06       	cpc	r1, r23
 468:	18 06       	cpc	r1, r24
 46a:	09 06       	cpc	r0, r25
 46c:	08 95       	ret

0000046e <__fp_pscB>:
 46e:	00 24       	eor	r0, r0
 470:	0a 94       	dec	r0
 472:	12 16       	cp	r1, r18
 474:	13 06       	cpc	r1, r19
 476:	14 06       	cpc	r1, r20
 478:	05 06       	cpc	r0, r21
 47a:	08 95       	ret

0000047c <__fp_round>:
 47c:	09 2e       	mov	r0, r25
 47e:	03 94       	inc	r0
 480:	00 0c       	add	r0, r0
 482:	11 f4       	brne	.+4      	; 0x488 <__fp_round+0xc>
 484:	88 23       	and	r24, r24
 486:	52 f0       	brmi	.+20     	; 0x49c <__fp_round+0x20>
 488:	bb 0f       	add	r27, r27
 48a:	40 f4       	brcc	.+16     	; 0x49c <__fp_round+0x20>
 48c:	bf 2b       	or	r27, r31
 48e:	11 f4       	brne	.+4      	; 0x494 <__fp_round+0x18>
 490:	60 ff       	sbrs	r22, 0
 492:	04 c0       	rjmp	.+8      	; 0x49c <__fp_round+0x20>
 494:	6f 5f       	subi	r22, 0xFF	; 255
 496:	7f 4f       	sbci	r23, 0xFF	; 255
 498:	8f 4f       	sbci	r24, 0xFF	; 255
 49a:	9f 4f       	sbci	r25, 0xFF	; 255
 49c:	08 95       	ret

0000049e <__fp_split3>:
 49e:	57 fd       	sbrc	r21, 7
 4a0:	90 58       	subi	r25, 0x80	; 128
 4a2:	44 0f       	add	r20, r20
 4a4:	55 1f       	adc	r21, r21
 4a6:	59 f0       	breq	.+22     	; 0x4be <__fp_splitA+0x10>
 4a8:	5f 3f       	cpi	r21, 0xFF	; 255
 4aa:	71 f0       	breq	.+28     	; 0x4c8 <__fp_splitA+0x1a>
 4ac:	47 95       	ror	r20

000004ae <__fp_splitA>:
 4ae:	88 0f       	add	r24, r24
 4b0:	97 fb       	bst	r25, 7
 4b2:	99 1f       	adc	r25, r25
 4b4:	61 f0       	breq	.+24     	; 0x4ce <__fp_splitA+0x20>
 4b6:	9f 3f       	cpi	r25, 0xFF	; 255
 4b8:	79 f0       	breq	.+30     	; 0x4d8 <__fp_splitA+0x2a>
 4ba:	87 95       	ror	r24
 4bc:	08 95       	ret
 4be:	12 16       	cp	r1, r18
 4c0:	13 06       	cpc	r1, r19
 4c2:	14 06       	cpc	r1, r20
 4c4:	55 1f       	adc	r21, r21
 4c6:	f2 cf       	rjmp	.-28     	; 0x4ac <__fp_split3+0xe>
 4c8:	46 95       	lsr	r20
 4ca:	f1 df       	rcall	.-30     	; 0x4ae <__fp_splitA>
 4cc:	08 c0       	rjmp	.+16     	; 0x4de <__fp_splitA+0x30>
 4ce:	16 16       	cp	r1, r22
 4d0:	17 06       	cpc	r1, r23
 4d2:	18 06       	cpc	r1, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	f1 cf       	rjmp	.-30     	; 0x4ba <__fp_splitA+0xc>
 4d8:	86 95       	lsr	r24
 4da:	71 05       	cpc	r23, r1
 4dc:	61 05       	cpc	r22, r1
 4de:	08 94       	sec
 4e0:	08 95       	ret

000004e2 <__fp_zero>:
 4e2:	e8 94       	clt

000004e4 <__fp_szero>:
 4e4:	bb 27       	eor	r27, r27
 4e6:	66 27       	eor	r22, r22
 4e8:	77 27       	eor	r23, r23
 4ea:	cb 01       	movw	r24, r22
 4ec:	97 f9       	bld	r25, 7
 4ee:	08 95       	ret

000004f0 <__mulsf3>:
 4f0:	0e 94 8b 02 	call	0x516	; 0x516 <__mulsf3x>
 4f4:	0c 94 3e 02 	jmp	0x47c	; 0x47c <__fp_round>
 4f8:	0e 94 30 02 	call	0x460	; 0x460 <__fp_pscA>
 4fc:	38 f0       	brcs	.+14     	; 0x50c <__mulsf3+0x1c>
 4fe:	0e 94 37 02 	call	0x46e	; 0x46e <__fp_pscB>
 502:	20 f0       	brcs	.+8      	; 0x50c <__mulsf3+0x1c>
 504:	95 23       	and	r25, r21
 506:	11 f0       	breq	.+4      	; 0x50c <__mulsf3+0x1c>
 508:	0c 94 27 02 	jmp	0x44e	; 0x44e <__fp_inf>
 50c:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__fp_nan>
 510:	11 24       	eor	r1, r1
 512:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_szero>

00000516 <__mulsf3x>:
 516:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_split3>
 51a:	70 f3       	brcs	.-36     	; 0x4f8 <__mulsf3+0x8>

0000051c <__mulsf3_pse>:
 51c:	95 9f       	mul	r25, r21
 51e:	c1 f3       	breq	.-16     	; 0x510 <__mulsf3+0x20>
 520:	95 0f       	add	r25, r21
 522:	50 e0       	ldi	r21, 0x00	; 0
 524:	55 1f       	adc	r21, r21
 526:	62 9f       	mul	r22, r18
 528:	f0 01       	movw	r30, r0
 52a:	72 9f       	mul	r23, r18
 52c:	bb 27       	eor	r27, r27
 52e:	f0 0d       	add	r31, r0
 530:	b1 1d       	adc	r27, r1
 532:	63 9f       	mul	r22, r19
 534:	aa 27       	eor	r26, r26
 536:	f0 0d       	add	r31, r0
 538:	b1 1d       	adc	r27, r1
 53a:	aa 1f       	adc	r26, r26
 53c:	64 9f       	mul	r22, r20
 53e:	66 27       	eor	r22, r22
 540:	b0 0d       	add	r27, r0
 542:	a1 1d       	adc	r26, r1
 544:	66 1f       	adc	r22, r22
 546:	82 9f       	mul	r24, r18
 548:	22 27       	eor	r18, r18
 54a:	b0 0d       	add	r27, r0
 54c:	a1 1d       	adc	r26, r1
 54e:	62 1f       	adc	r22, r18
 550:	73 9f       	mul	r23, r19
 552:	b0 0d       	add	r27, r0
 554:	a1 1d       	adc	r26, r1
 556:	62 1f       	adc	r22, r18
 558:	83 9f       	mul	r24, r19
 55a:	a0 0d       	add	r26, r0
 55c:	61 1d       	adc	r22, r1
 55e:	22 1f       	adc	r18, r18
 560:	74 9f       	mul	r23, r20
 562:	33 27       	eor	r19, r19
 564:	a0 0d       	add	r26, r0
 566:	61 1d       	adc	r22, r1
 568:	23 1f       	adc	r18, r19
 56a:	84 9f       	mul	r24, r20
 56c:	60 0d       	add	r22, r0
 56e:	21 1d       	adc	r18, r1
 570:	82 2f       	mov	r24, r18
 572:	76 2f       	mov	r23, r22
 574:	6a 2f       	mov	r22, r26
 576:	11 24       	eor	r1, r1
 578:	9f 57       	subi	r25, 0x7F	; 127
 57a:	50 40       	sbci	r21, 0x00	; 0
 57c:	9a f0       	brmi	.+38     	; 0x5a4 <__mulsf3_pse+0x88>
 57e:	f1 f0       	breq	.+60     	; 0x5bc <__mulsf3_pse+0xa0>
 580:	88 23       	and	r24, r24
 582:	4a f0       	brmi	.+18     	; 0x596 <__mulsf3_pse+0x7a>
 584:	ee 0f       	add	r30, r30
 586:	ff 1f       	adc	r31, r31
 588:	bb 1f       	adc	r27, r27
 58a:	66 1f       	adc	r22, r22
 58c:	77 1f       	adc	r23, r23
 58e:	88 1f       	adc	r24, r24
 590:	91 50       	subi	r25, 0x01	; 1
 592:	50 40       	sbci	r21, 0x00	; 0
 594:	a9 f7       	brne	.-22     	; 0x580 <__mulsf3_pse+0x64>
 596:	9e 3f       	cpi	r25, 0xFE	; 254
 598:	51 05       	cpc	r21, r1
 59a:	80 f0       	brcs	.+32     	; 0x5bc <__mulsf3_pse+0xa0>
 59c:	0c 94 27 02 	jmp	0x44e	; 0x44e <__fp_inf>
 5a0:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <__fp_szero>
 5a4:	5f 3f       	cpi	r21, 0xFF	; 255
 5a6:	e4 f3       	brlt	.-8      	; 0x5a0 <__mulsf3_pse+0x84>
 5a8:	98 3e       	cpi	r25, 0xE8	; 232
 5aa:	d4 f3       	brlt	.-12     	; 0x5a0 <__mulsf3_pse+0x84>
 5ac:	86 95       	lsr	r24
 5ae:	77 95       	ror	r23
 5b0:	67 95       	ror	r22
 5b2:	b7 95       	ror	r27
 5b4:	f7 95       	ror	r31
 5b6:	e7 95       	ror	r30
 5b8:	9f 5f       	subi	r25, 0xFF	; 255
 5ba:	c1 f7       	brne	.-16     	; 0x5ac <__mulsf3_pse+0x90>
 5bc:	fe 2b       	or	r31, r30
 5be:	88 0f       	add	r24, r24
 5c0:	91 1d       	adc	r25, r1
 5c2:	96 95       	lsr	r25
 5c4:	87 95       	ror	r24
 5c6:	97 f9       	bld	r25, 7
 5c8:	08 95       	ret

000005ca <__divmodhi4>:
 5ca:	97 fb       	bst	r25, 7
 5cc:	07 2e       	mov	r0, r23
 5ce:	16 f4       	brtc	.+4      	; 0x5d4 <__divmodhi4+0xa>
 5d0:	00 94       	com	r0
 5d2:	07 d0       	rcall	.+14     	; 0x5e2 <__divmodhi4_neg1>
 5d4:	77 fd       	sbrc	r23, 7
 5d6:	09 d0       	rcall	.+18     	; 0x5ea <__divmodhi4_neg2>
 5d8:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__udivmodhi4>
 5dc:	07 fc       	sbrc	r0, 7
 5de:	05 d0       	rcall	.+10     	; 0x5ea <__divmodhi4_neg2>
 5e0:	3e f4       	brtc	.+14     	; 0x5f0 <__divmodhi4_exit>

000005e2 <__divmodhi4_neg1>:
 5e2:	90 95       	com	r25
 5e4:	81 95       	neg	r24
 5e6:	9f 4f       	sbci	r25, 0xFF	; 255
 5e8:	08 95       	ret

000005ea <__divmodhi4_neg2>:
 5ea:	70 95       	com	r23
 5ec:	61 95       	neg	r22
 5ee:	7f 4f       	sbci	r23, 0xFF	; 255

000005f0 <__divmodhi4_exit>:
 5f0:	08 95       	ret

000005f2 <__udivmodhi4>:
 5f2:	aa 1b       	sub	r26, r26
 5f4:	bb 1b       	sub	r27, r27
 5f6:	51 e1       	ldi	r21, 0x11	; 17
 5f8:	07 c0       	rjmp	.+14     	; 0x608 <__udivmodhi4_ep>

000005fa <__udivmodhi4_loop>:
 5fa:	aa 1f       	adc	r26, r26
 5fc:	bb 1f       	adc	r27, r27
 5fe:	a6 17       	cp	r26, r22
 600:	b7 07       	cpc	r27, r23
 602:	10 f0       	brcs	.+4      	; 0x608 <__udivmodhi4_ep>
 604:	a6 1b       	sub	r26, r22
 606:	b7 0b       	sbc	r27, r23

00000608 <__udivmodhi4_ep>:
 608:	88 1f       	adc	r24, r24
 60a:	99 1f       	adc	r25, r25
 60c:	5a 95       	dec	r21
 60e:	a9 f7       	brne	.-22     	; 0x5fa <__udivmodhi4_loop>
 610:	80 95       	com	r24
 612:	90 95       	com	r25
 614:	bc 01       	movw	r22, r24
 616:	cd 01       	movw	r24, r26
 618:	08 95       	ret

0000061a <_exit>:
 61a:	f8 94       	cli

0000061c <__stop_program>:
 61c:	ff cf       	rjmp	.-2      	; 0x61c <__stop_program>
